git: gitVitz è molto utile per spostarsi nei branch
git add appunti.txt
git status -> ci dirà che deve essere fatto un commit
git commit -m "Prima versione file"
git status ci dirà che tutto è a posto
git log
facciamo delle modifiche e digitiamo git diff le modifiche compariranno in verde
git diff
git . aggiunge tutti i file della directory
git add file1.txt file3.txt file4.txt aggiunge i file uno per uno
git log --oneline esamina tutte le operazioni fatte in maniera succinta e comoda
git commit -am "unico comando aggiunge tutti i file e li spedisce"

NAVIGARE TRA I COMMIT !!!
Bastano le prime sette cifre dello sha1 del commit che sono ben evidenziate nel comando git log --oneline

$ git log --oneline
3fab71f (HEAD -> master) quarta versione succinta
e772f21 Terza versione
d3c5823 Seconda versione file
368d65c Prima versione file

git checkout 368d65c torna alla prima versione
git checkout master torna all ultima versione

AGGIUNGIAMO L'UTENTE !!
git config --global user.name "cirocavalleggeri"
git config --global user.email "ciroallinone@gmail.com"

LAVORIAMO IN TEAM AGGIUNGIAMO UN BRACCIO SU CUI LAVORARE DA SOLI E SE FUNZIONA AGGIUNGERLO AL MASTER

La prima cosa da fare è registrare il proprio nome utente e la propria email

git branch esperimenti
 e spostiamoci su l braccio esperimenti
facciamo un git status
per vedere lo status
e lavoriamo su un altro file
git checkout esperimenti
lavoriamo in questo braccio e se tutto è andato bene possiamo fondere i due lavori con
git checkout master
ma... nel momento in cui lo facciamo vedremo perso tutto il nostro lavoro fino a che...non faremo un merge con il braccio
git merge esperimenti
ovviamente supponiamo che il lavoro nel braccio non andava bene allora toccava cancellarlo anteponendo -d davanti al nome del braccio
git branch -d esperimenti
potevamo inoltre fondere il master ad esperimenti con
git merge master 
ESPLORIAMO LA CARTELLA .git
aggiungiamo una parola nuova e facciamo il commit
 git commit  -am "aggiunto la parola nuova"

facciamo un git log --oneline e andiamo a vedere il file modificato nella cartella .git corrispondente al file che ha le prime  7 cifre dopo la cartella object
 git cat-file -t c9abecf
otteniamo commit
con 
 git cat-file -p prime sette cifre dell' oggetto tree otteniamo il nome del file modificato
con
 git cat-file -p prime sette cifre del file otteniamo il contenuto







android:
Sie è passati da onSaveinstance onRestoreInstance a-> ModelView dove tutti i dati che non devono variare rimangono all internno della classe con
estensione ModelView